{"mappings":"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","sources":["index.js","src/AttributeClass.js","src/ElementClass.js","src/ReadShaderCodeClass.js","src/Texture2DClass.js","src/TransformsClass.js","src/UniformClass.js","src/HelperFunctions.js"],"sourcesContent":["/**\r\n * Created by Rick on 2022-01-12.\r\n */\r\n'use strict';\r\n\r\nimport AttributeClass from \"./src/AttributeClass.js\";\r\nimport ElementClass from \"./src/ElementClass.js\";\r\nimport ReadShaderCodeClass from \"./src/ReadShaderCodeClass.js\";\r\nimport Texture2DClass from \"./src/Texture2DClass.js\";\r\nimport TransformsClass from \"./src/TransformsClass.js\";\r\nimport UniformClass from \"./src/UniformClass.js\";\r\nimport {createGLcontext} from \"./src/HelperFunctions.js\";\r\nimport {initializeContext} from \"./src/HelperFunctions\";\r\nimport {resizeCanvasToDisplaySize} from \"./src/HelperFunctions.js\";\r\nimport {createProgram} from \"./src/HelperFunctions.js\";\r\nimport {createShader} from \"./src/HelperFunctions.js\";\r\n\r\nexport {\r\n  AttributeClass,\r\n  ElementClass,\r\n  ReadShaderCodeClass,\r\n  Texture2DClass,\r\n  TransformsClass,\r\n  UniformClass,\r\n  createGLcontext,\r\n  initializeContext,\r\n  resizeCanvasToDisplaySize,\r\n  createProgram,\r\n  createShader\r\n};","/**\r\n * Created by Rick on 2021-12-11.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * AttributeClass provides functions for working with a WebGLProgram's attribute variable.\r\n *   The class establishes a data buffer for sending vertex attributes, such as vertex coordinates,\r\n *   texture coordinate data, or vertex color data through the graphics hardware pipeline.\r\n *   See [WebGL Fundamentals](https://webgl2fundamentals.org/webgl/lessons/webgl-fundamentals.html) for\r\n *   an explanation on data buffers.\r\n *\r\n */\r\nexport default class AttributeClass {\r\n  /**\r\n   * Create an AttributeClass instance\r\n   * @param {WebGLRenderingContext} gl The WebGL context\r\n   * @param {number} type  Specifying the [data type]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer}\r\n   *   of each component in the array.\r\n   * @param {WebGLProgram} program The WebGL program.\r\n   * @param {string} name The name of the attribute variable.\r\n   */\r\n  constructor(gl, type, program, name) {\r\n    this.gl = gl;\r\n    this.type = type;\r\n    // Look up where the attribute needs to go\r\n    this.attributeLocation = this.gl.getAttribLocation(program, name);\r\n    this.buffer = this.gl.createBuffer();\r\n  }\r\n\r\n  /**\r\n   * Describes how the attribute is read from the buffer pipeline.\r\n   * @param {number} size  The number of components per vertex attribute. Must be 1, 2, 3, or 4.\r\n   * @param {boolean} normalize Specifying whether integer data values should be normalized.\r\n   * @param {number} stride Specifying the offset in bytes between the beginning of consecutive vertex attributes.\r\n   * @param {number} offset Specifying an offset in bytes of the first component in the vertex attribute array.\r\n   */\r\n  bufferFormat(size, normalize, stride, offset) {\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\r\n    // Tell the attribute how to get data out of the internal ARRAY_BUFFER\r\n    this.gl.vertexAttribPointer(\r\n      this.attributeLocation,\r\n      size,\r\n      this.type,\r\n      normalize,\r\n      stride,\r\n      offset\r\n    );\r\n    this.gl.enableVertexAttribArray(this.attributeLocation);\r\n  }\r\n\r\n  /**\r\n   * Initializes and creates the buffer object's data store.\r\n   * @param {number[]} attribute_list Array containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.\r\n   * @param {number} usage Specifies the intended [usage pattern]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData} of the data store for optimization purposes.\r\n   */\r\n  setData(attribute_list, usage){\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\r\n    // Set geometry\r\n    switch(this.type){\r\n      case this.gl.FLOAT:\r\n        this.gl.bufferData(\r\n          this.gl.ARRAY_BUFFER,\r\n          new Float32Array(attribute_list),\r\n          usage\r\n        );\r\n      break;\r\n      case this.gl.UNSIGNED_BYTE:\r\n        this.gl.bufferData(\r\n          this.gl.ARRAY_BUFFER,\r\n          new Uint8Array(attribute_list),\r\n          usage\r\n        );\r\n        break;\r\n    }\r\n  }\r\n}","/**\r\n * Created by Rick on 2022-01-15.\r\n */\r\n'use strict';\r\n/**\r\n * ElementClass provides a way of defining vertex indices\r\n *   and using gl.drawElements for drawing the geometry.\r\n *   See [WebGL2 Indexed Vertices]{@link https://webgl2fundamentals.org/webgl/lessons/webgl-indexed-vertices.html}.\r\n */\r\nexport default class ElementClass {\r\n  /**\r\n   *\r\n   * @param gl {WebGLRenderingContext} gl The WebGL context\r\n   * @param type {string} The numeric type for the indices.\r\n   *   Acceptable values are \"Uint8Array\" or \"Uint16Array\".\r\n   */\r\n  constructor(gl, type) {\r\n    this.gl = gl;\r\n    this.type = type;\r\n    // Create a buffer to put the element index values\r\n    this.indexBuffer = gl.createBuffer();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number[]} indices A numeric matrix of vertex indices.\r\n   * @param {number} usage Specifies the intended [usage pattern]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData} of the data store for optimization purposes.\r\n   */\r\n  setData(indices, usage) {\r\n    // Bind this.buffer to WebGL's internal ELEMENT_ARRAY_BUFFER\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    switch(this.type){\r\n      case \"Uint8Array\":\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,\r\n          new Uint8Array(indices), usage);\r\n        break;\r\n      case \"Uint16Array\":\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,\r\n          new Uint16Array(indices), usage);\r\n        break;\r\n    }\r\n  }\r\n}","/**\r\n * Created by Rick on 2021-12-09.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * ReadShaderCodeClass handles reading the shader files from a local file\r\n *   or http server.\r\n *\r\n */\r\nexport default class ReadShaderCodeClass {\r\n  /**\r\n   * A static function that downloads shader code from a list of shader files.\r\n   * @param shader_files_list A string array of shader file/url paths\r\n   * @param debug A boolean which if true logs diagnostic messages to the console\r\n   * @returns {Promise<*[]>} Returns a Promise which when fulfilled returns a list of shader code\r\n   */\r\n  static async downloadShaders(shader_files_list, debug = false){\r\n    try {\r\n      const shaders_list = [];\r\n      for(let j = 0; j < shader_files_list.length; j += 1) {\r\n        let shader_url = shader_files_list[j];\r\n        let data = await ReadShaderCodeClass.#get_data(shader_url);\r\n        // Save the shaders in an array\r\n        shaders_list.push(data);\r\n        if(debug){\r\n          console.log(`Downloaded shader code ${shader_url}`);\r\n        }\r\n      }\r\n      return shaders_list;\r\n    }catch(e){\r\n      console.log(`downloadShaders Error: ${e}`);\r\n    }\r\n  }\r\n  /**\r\n   * A static function for the code/text of a single shader file.\r\n   * @param url The url to the shader file from the http server\r\n   * @returns {Promise<null>} Returns a Promise which if fulfilled returns\r\n   *   a file's text of shader code\r\n   */\r\n  static async #get_data(url) {\r\n    let data = null;\r\n    let resp = null;\r\n    try{\r\n      resp = await fetch(url);\r\n      if(resp.ok){\r\n        data = await resp.text();\r\n      }\r\n    }catch(e){\r\n      throw new Error(`downloadShaders fetch error: ${e.message}`);\r\n    }\r\n    if(!data){\r\n      throw new Error(`downloadShaders fetch status: ${resp.status}`)\r\n    }else {\r\n      return data;\r\n    }\r\n  }\r\n}","/**\r\n * Created by Rick on 2021-12-30.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * Texture2DClass provides functions for setting and\r\n *   binding color or image\r\n *   [WebGLTexture object]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture}\r\n */\r\nexport default class Texture2DClass {\r\n  /**\r\n   * Create a Texture2DClass instance\r\n   * @param {WebGLRenderingContext} gl\r\n   */\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n  }\r\n\r\n  /**\r\n   * Create a [WebGLTexture]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture} object\r\n   *   and define its color.\r\n   * @param {number[]} color_v4 A 4 element vector where the first three values are the RGB values for\r\n   *   the canvas background. The fourth is the alpha value.\r\n   */\r\n  setColor(color_v4){\r\n    // Bind to the TEXTURE_2D bind point of the unit\r\n    const texture = this.gl.createTexture();\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n    // Fill the texture with a 1x1 colored pixel\r\n    this.gl.texImage2D(\r\n      this.gl.TEXTURE_2D,\r\n      0,\r\n      this.gl.RGBA,\r\n      1,\r\n      1,\r\n      0,\r\n      this.gl.RGBA,\r\n      this.gl.UNSIGNED_BYTE,\r\n      new Uint8Array(color_v4)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Create a [WebGLTexture]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture} object.\r\n   *   Activate and bind the texture then set it initially to a\r\n   *   blue color while the image is loaded. The function is async\r\n   *   and returns a javascript Promise.\r\n   * @param {string} url The file path to the image to be used as a texture\r\n   */\r\n  async loadTexture(url) {\r\n    // Fill the texture with a 1x1 colored pixel\r\n    this.gl.texImage2D(\r\n      this.gl.TEXTURE_2D, //target\r\n      0,                  //level\r\n      this.gl.RGBA,       //internal format\r\n      1,                  //width\r\n      1,                  //height\r\n      0,                  //border\r\n      this.gl.RGBA,       //format\r\n      this.gl.UNSIGNED_BYTE,    //type\r\n      new Uint8Array([0, 0, 255, 255])  //pixel source\r\n    );\r\n\r\n    let response = await fetch(url);\r\n    let blob = await response.blob();\r\n    let image = await createImageBitmap(blob, {imageOrientation: 'flipY'});\r\n\r\n    const texture = this.gl.createTexture();\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.REPEAT);\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.REPEAT);\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\r\n\r\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, image);\r\n  }\r\n}","/**\r\n * Created by Rick on 2022-01-01.\r\n */\r\n'use strict';\r\n\r\nimport {toRadian as m4_toRadian} from \"gl-matrix/esm/common\";\r\nimport {\r\n  create as m4_create,\r\n  fromScaling as m4_fromScaling,\r\n  fromTranslation as m4_fromTranslation,\r\n  fromXRotation as m4_fromXRotation,\r\n  fromYRotation as m4_fromYRotation,\r\n  fromZRotation as m4_fromZRotation,\r\n  ortho as m4_ortho,\r\n  perspective as m4_perspective\r\n} from \"gl-matrix/esm/mat4\";\r\n\r\n/**\r\n * TransformsClass provides convenience functions for\r\n *   creating transform related matrices from the\r\n *   [gl-matrix library]{@link https://glmatrix.net/}\r\n */\r\nexport default class TransformsClass {\r\n  /**\r\n   * Creates a 4x4 orthogonal projection matrix with the given bounds.\r\n   * @param {number} left\r\n   * @param {number} right\r\n   * @param {number} bottom\r\n   * @param {number} top\r\n   * @param {number} near\r\n   * @param {number} far\r\n   * @returns {Float32Array} A 4x4 orthogonal projection matrix\r\n   */\r\n  static getOrthoMatrix(left, right, bottom, top, near, far){\r\n    const ortho_m4 = m4_create();\r\n    m4_ortho(ortho_m4, left, right, bottom, top, near, far);\r\n    return ortho_m4;\r\n  }\r\n\r\n  /**\r\n   * Creates a 4x4 perspective matrix\r\n   * @param {number} fov Vertical field of view in degrees.\r\n   * @param {number} aspect Aspect ratio. typically viewport width/height.\r\n   * @param {number} zNear Near bound of the frustum.\r\n   * @param {number}zFar Far bound of the frustum, can be null or Infinity.\r\n   * @returns {Float32Array} A 4x4 perspective matrix.\r\n   */\r\n  static getPerspectiveMatrix(fov, aspect, zNear, zFar){\r\n    const perspective_m4 = m4_create();\r\n    m4_perspective(perspective_m4, m4_toRadian(fov), aspect, zNear, zFar);\r\n    return perspective_m4;\r\n  }\r\n\r\n  /**\r\n   * Creates a 4x4 translation matrix\r\n   * @param {Float32Array} translate_ar A 3 element float array of x, y, z translation.\r\n   * @returns {Float32Array} A 4x4 translation matrix.\r\n   */\r\n  static getTranslationMatrix(translate_ar){\r\n    const translate_m4 = m4_create();\r\n    m4_fromTranslation(translate_m4, translate_ar);\r\n    return translate_m4\r\n  }\r\n\r\n  /**\r\n   * Creates a 4x4 rotation matrix for a specific axis\r\n   * @param {string} axis Axis of rotation \"x\", \"Y\", or \"z\".\r\n   * @param {number} rotation in degrees\r\n   * @returns {Float32Array} A 4x4 rotation matrix\r\n   */\r\n  static getXYZRotationMatrix(axis, rotation){\r\n    const rotate_m4 = m4_create();\r\n    if(axis === 'x'){\r\n      m4_fromXRotation(rotate_m4, m4_toRadian(rotation));\r\n    }else if(axis === 'y'){\r\n      m4_fromYRotation(rotate_m4, m4_toRadian(rotation));\r\n    }else if(axis === 'z'){\r\n      m4_fromZRotation(rotate_m4, m4_toRadian(rotation));\r\n    }\r\n    return rotate_m4;\r\n  }\r\n\r\n  /**\r\n   * Creates a 4x4 scaling matrix\r\n   * @param {Float32Array} scale_ar A 3 element float array of x, y, z scaling.\r\n   * @returns {Float32Array} A 4x4 scale matrix\r\n   */\r\n  static getScaleMatrix(scale_ar){\r\n    const scale_m4 = m4_create();\r\n    m4_fromScaling(scale_m4, scale_ar);\r\n    return scale_m4;\r\n  }\r\n}","/**\r\n * Created by Rick on 2021-12-11.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * UniformClass creates and sets various types\r\n *   of [uniform variables]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform}\r\n *   defined in shader code.\r\n */\r\nexport default class UniformClass {\r\n  /**\r\n   * Create a UninformClass instance\r\n   * @param {WebGLRenderingContext} gl The WebGL context.\r\n   * @param {WebGLProgram} program The WebGL program.\r\n   * @param {string} name The name of the uniform variable.\r\n   * @param {string} type The type of uniform variable.\r\n   */\r\n  constructor(gl, program, name, type) {\r\n    this.gl = gl;\r\n    this.type = type;\r\n    // Look up where the uniform needs to go\r\n    this.uniformLocation = gl.getUniformLocation(program, name);\r\n  }\r\n\r\n  /**\r\n   * Set the value of the uniform variable.\r\n   * @param {number[]} args Array of values for the uniform variable.\r\n   *   The number of array elements submitted depends on the type of\r\n   *   variable being set.\r\n   */\r\n  setData(...args){\r\n    switch (this.type) {\r\n      case 'uniform1f':\r\n        this.gl.uniform1f(this.uniformLocation, args[0]);\r\n        break;\r\n      case 'uniform2f':\r\n        this.gl.uniform2f(this.uniformLocation, args[0], args[1]);\r\n        break;\r\n      case 'uniform4f':\r\n        this.gl.uniform4f(this.uniformLocation, args[0], args[1], args[2], args[3]);\r\n        break;\r\n      case 'uniform2fv':\r\n        this.gl.uniform2fv(this.uniformLocation, args[0]);\r\n        break;\r\n      case 'uniform3fv':\r\n        this.gl.uniform3fv(this.uniformLocation, args[0]);\r\n        break;\r\n      case 'uniform4fv':\r\n        this.gl.uniform4fv(this.uniformLocation, args[0]);\r\n        break;\r\n      case 'uniformMatrix3fv':\r\n        this.gl.uniformMatrix3fv(this.uniformLocation,false,args[0]);\r\n        break;\r\n      case 'uniformMatrix4fv':\r\n        this.gl.uniformMatrix4fv(this.uniformLocation,false,args[0]);\r\n        break;\r\n      default:\r\n        throw new Error(`UniformClass: function ${this.type} has not been implemented.`);\r\n    }\r\n  }\r\n}","/**\r\n * Created by Rick on 2022-01-11.\r\n */\r\n'use strict';\r\n\r\n/** @function createGLcontext\r\n * Create a WebGLRenderingContext from a canvas id.\r\n *\r\n * @param {string} canvas_id The html dom id for the canvas.\r\n * @param {string} context_type The context type. Acceptable values are '2d', 'webgl', 'webgl2', 'bitmaprenderer'.\r\n * @param {Object} options A set of options for the context. See {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext}.\r\n * @returns {{gl: WebGLRenderingContext, canvas: HTMLElement}}\r\n */\r\nfunction createGLcontext(canvas_id, context_type='webgl2', options){\r\n  // One-time initialization of the scene.\r\n  const canvas = document.getElementById(canvas_id);\r\n  if(!canvas){\r\n    throw new Error(`createGLContext: Could not locate canvas element with id ${canvas_id}`);\r\n  }\r\n  // Create a WebGLRenderingContext\r\n  const gl = canvas.getContext(context_type, options);\r\n\r\n  return {\r\n    gl: gl,\r\n    canvas: canvas\r\n  };\r\n}\r\n\r\n/** @function\r\n * Initialize the WebGLRenderingContext by clearing the canvas and giving by default a black background.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to be initialized.\r\n * @param {number[]} color_v4 A 4 element vector where the first three values are the RGB values for\r\n *   the canvas background. The fourth is the alpha value.\r\n */\r\nfunction initializeContext(gl, color_v4 = [0.0,0.0,0.0,1.0]){\r\n  // Clear the canvas (red, gree, blue, alpha)\r\n  gl.enable(gl.BLEND);\r\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n  gl.clearColor(color_v4[0], color_v4[1], color_v4[2], color_v4[3]);  // clear to black, fully opaque\r\n  gl.clearDepth(1.0);  // clear everything\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\n/** @function\r\n * Check that the size of the canvas with the css values for width and height are the same.\r\n *\r\n * @param {HTMLElement} canvas The HTML canvas element whose size is to be checked.\r\n * @returns {boolean} Returns TRUE if the size was reassigned.\r\n */\r\nfunction resizeCanvasToDisplaySize(canvas){\r\n  // Lookup the size the browser is displaying the canvas in css pixels\r\n  const displayWidth = canvas.clientWidth;\r\n  const displayHeight = canvas.clientHeight;\r\n\r\n  // Check if the canvas is not the same size\r\n  const needResize = canvas.width !== displayWidth ||\r\n    canvas.height !== displayHeight;\r\n\r\n  if(needResize) {\r\n    // Make the canvas the same size\r\n    canvas.width = displayWidth;\r\n    canvas.height = displayHeight;\r\n  }\r\n\r\n  return needResize;\r\n}\r\n\r\n/** @function\r\n * Create a complete rendering program {WebGLProgram}\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas.\r\n * @param {WebGLShader} vertex_shader The program's vertex shader.\r\n * @param {WebGLShader} frag_shader The program's fragment shader.\r\n * @returns {WebGLProgram}\r\n */\r\nfunction createProgram(gl, vertex_shader, frag_shader){\r\n  const program = gl.createProgram();\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertex_shader);\r\n  gl.attachShader(program, frag_shader);\r\n\r\n  // Link the WebGLProgram object\r\n  gl.linkProgram(program);\r\n\r\n  // Check for success\r\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n\r\n  if(!success) {\r\n    const program_info = gl.getProgramInfoLog(program);\r\n    gl.deleteProgram(program);\r\n    throw new Error('createProgram: ' + program_info);\r\n  }else {\r\n    return program;\r\n  }\r\n}\r\n\r\n/** @function\r\n * Creates a shader object {WebGLShader} given\r\n *   the source code. See [WebGLShader]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLShader}\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas\r\n * @param {number} type The type of shader, either gl.VERTEX_SHADER or gl.FRAGMENT_SHADER.\r\n * @param {string} source The code/text of the shader.\r\n * @returns {WebGLShader}\r\n */\r\nfunction createShader(gl, type, source){\r\n  const shader = gl.createShader(type);\r\n  // Put the source code into the gl shader object\r\n  gl.shaderSource(shader, source);\r\n  // Compile the shader code\r\n  gl.compileShader(shader);\r\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\r\n  if(!success){\r\n    const shader_info = gl.getShaderInfoLog(shader);\r\n    gl.deleteShader(shader);\r\n    throw new Error('createShader: ' + shader_info);\r\n  }else {\r\n    return shader;\r\n  }\r\n}\r\n\r\nexport{\r\n  createGLcontext,\r\n  initializeContext,\r\n  resizeCanvasToDisplaySize,\r\n  createProgram,\r\n  createShader\r\n}"],"names":[],"version":3,"file":"web-gl-helpers.js.map"}