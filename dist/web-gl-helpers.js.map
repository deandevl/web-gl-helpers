{"mappings":"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","sources":["index.js","src/HelperFunctions.js","src/ArrayBufferClass.js","src/ElementArrayBufferClass.js","src/ReadShaderCodeClass.js","src/Texture2DClass.js","src/TransformsClass.js","src/UniformClass.js","src/VertexArrayObjectClass.js","src/geometries/AxisClass.js","src/geometries/ConeClass.js","src/geometries/FloorClass.js"],"sourcesContent":["/**\r\n * Created by Rick on 2022-01-12.\r\n */\r\n'use strict';\r\n\r\n// From HelperFunctions.js\r\nimport {createGLcontext} from \"./src/HelperFunctions.js\";\r\nimport {initializeContext} from \"./src/HelperFunctions.js\";\r\nimport {resizeCanvasToDisplaySize} from \"./src/HelperFunctions.js\";\r\nimport {autoResizeCanvas} from \"./src/HelperFunctions.js\";\r\nimport {createProgram} from \"./src/HelperFunctions.js\";\r\nimport {createShader} from \"./src/HelperFunctions.js\";\r\nimport {cleanBuffers} from \"./src/HelperFunctions.js\";\r\nimport {calculateNormals} from \"./src/HelperFunctions.js\";\r\nimport {hexToRGB} from \"./src/HelperFunctions.js\";\r\nimport {rgbToHex} from \"./src/HelperFunctions.js\";\r\nimport {denormalizeColor} from \"./src/HelperFunctions.js\";\r\nimport {normalizeColor} from \"./src/HelperFunctions.js\";\r\n\r\nimport ArrayBufferClass from \"./src/ArrayBufferClass.js\";\r\nimport ElementArrayBufferClass from \"./src/ElementArrayBufferClass.js\";\r\nimport ReadShaderCodeClass from \"./src/ReadShaderCodeClass.js\";\r\nimport Texture2DClass from \"./src/Texture2DClass.js\";\r\nimport TransformsClass from \"./src/TransformsClass.js\";\r\nimport UniformClass from \"./src/UniformClass.js\";\r\nimport VertexArrayObjectClass from \"./src/VertexArrayObjectClass.js\";\r\n\r\n// From geometries\r\nimport AxisClass from \"./src/geometries/AxisClass.js\";\r\nimport ConeClass from \"./src/geometries/ConeClass.js\";\r\nimport FloorClass from \"./src/geometries/FloorClass.js\"\r\n\r\nexport {\r\n  createGLcontext,\r\n  initializeContext,\r\n  resizeCanvasToDisplaySize,\r\n  autoResizeCanvas,\r\n  createProgram,\r\n  createShader,\r\n  cleanBuffers,\r\n  calculateNormals,\r\n  hexToRGB,\r\n  rgbToHex,\r\n  denormalizeColor,\r\n  normalizeColor,\r\n\r\n  ArrayBufferClass,\r\n  ElementArrayBufferClass,\r\n  ReadShaderCodeClass,\r\n  Texture2DClass,\r\n  TransformsClass,\r\n  UniformClass,\r\n  VertexArrayObjectClass,\r\n\r\n  AxisClass,\r\n  ConeClass,\r\n  FloorClass\r\n};","/**\r\n * Created by Rick on 2022-01-11.\r\n */\r\n'use strict';\r\n\r\n/** @function createGLcontext\r\n * Create a WebGLRenderingContext from a canvas id.\r\n *\r\n * @param {string} canvas_id The html dom id for the canvas.\r\n * @param {string} context_type The context type. Acceptable values are '2d', 'webgl', 'webgl2', 'bitmaprenderer'.\r\n * @param {Object} options A set of options for the context. See {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext}.\r\n * @returns {{gl: WebGLRenderingContext, canvas: HTMLElement}}\r\n */\r\nfunction createGLcontext(canvas_id, context_type='webgl2', options){\r\n  // One-time initialization of the scene.\r\n  const canvas = document.getElementById(canvas_id);\r\n  if(!canvas){\r\n    throw new Error(`HelperFunctions-createGLContext-Error: Could not locate canvas element with id ${canvas_id}`);\r\n  }\r\n  // Create a WebGLRenderingContext\r\n  const gl = canvas.getContext(context_type, options);\r\n\r\n  return {\r\n    gl: gl,\r\n    canvas: canvas\r\n  };\r\n}\r\n\r\n/** @function\r\n * Initialize the WebGLRenderingContext by clearing the canvas and giving by default a white background.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to be initialized.\r\n * @param {number[]} color_v4 A 4 element array where the first three values are the normalized RGB values for\r\n *   the canvas background. The fourth is the alpha value.\r\n */\r\nfunction initializeContext(gl, color_v4 = [0.9, 0.9, 0.9, 1]){\r\n  // Clear the canvas (red, gree, blue, alpha)\r\n  gl.clearColor(color_v4[0], color_v4[1], color_v4[2], color_v4[3]);  // clear to black, fully opaque\r\n  gl.clearDepth(1.0);  // clear everything\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n}\r\n\r\n/** @function\r\n * Check that the size of the canvas with the css values for width and height are the same.\r\n *\r\n * @param {HTMLElement} canvas The HTML canvas element whose size is to be checked.\r\n * @returns {boolean} Returns TRUE if the size was reassigned.\r\n */\r\nfunction resizeCanvasToDisplaySize(canvas){\r\n  // Lookup the size the browser is displaying the canvas in css pixels\r\n  const displayWidth = canvas.clientWidth;\r\n  const displayHeight = canvas.clientHeight;\r\n\r\n  // Check if the canvas is not the same size\r\n  const needResize = canvas.width !== displayWidth ||\r\n    canvas.height !== displayHeight;\r\n\r\n  if(needResize) {\r\n    // Make the canvas the same size\r\n    canvas.width = displayWidth;\r\n    canvas.height = displayHeight;\r\n  }\r\n\r\n  return needResize;\r\n}\r\n\r\n/**\r\n * // Given a canvas element, expand it to the size of the window\r\n // and ensure that it automatically resizes as the window changes\r\n * @param {HTMLElement} canvas The HTML canvas element whose size is to be resized.\r\n */\r\nfunction autoResizeCanvas(canvas){\r\n  const expandFullScreen = () => {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n  };\r\n  expandFullScreen();\r\n  // Resize screen when the browser has triggered the resize event\r\n  window.addEventListener('resize', expandFullScreen);\r\n}\r\n\r\n/** @function\r\n * Create a complete rendering program {WebGLProgram}\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas.\r\n * @param {WebGLShader} vertex_shader The program's vertex shader.\r\n * @param {WebGLShader} frag_shader The program's fragment shader.\r\n * @returns {WebGLProgram}\r\n */\r\nfunction createProgram(gl, vertex_shader, frag_shader){\r\n  const program = gl.createProgram();\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertex_shader);\r\n  gl.attachShader(program, frag_shader);\r\n\r\n  // Link the WebGLProgram object\r\n  gl.linkProgram(program);\r\n\r\n  // Check for success\r\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n\r\n  if(!success) {\r\n    const program_info = gl.getProgramInfoLog(program);\r\n    gl.deleteProgram(program);\r\n    throw new Error(`HelperFunctions-createProgram-Error: ${program_info}`);\r\n  }else {\r\n    return program;\r\n  }\r\n}\r\n\r\n/** @function\r\n * Creates a shader object {WebGLShader} given\r\n *   the source code. See [WebGLShader]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLShader}\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas\r\n * @param {number} type The type of shader, either gl.VERTEX_SHADER or gl.FRAGMENT_SHADER.\r\n * @param {string} source The code/text of the shader.\r\n * @returns {WebGLShader}\r\n */\r\nfunction createShader(gl, type, source){\r\n  const shader = gl.createShader(type);\r\n  // Put the source code into the gl shader object\r\n  gl.shaderSource(shader, source);\r\n  // Compile the shader code\r\n  gl.compileShader(shader);\r\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\r\n  if(!success){\r\n    const shader_info = gl.getShaderInfoLog(shader);\r\n    gl.deleteShader(shader);\r\n    throw new Error(`HelperFunctions-createShader-Error: ${shader_info}`);\r\n  }else {\r\n    return shader;\r\n  }\r\n}\r\n\r\n/**\r\n * Clean the Vertex Array Object(vbo) buffer, the\r\n *   vertex buffer, and the element array buffer.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas\r\n */\r\nfunction cleanBuffers(gl){\r\n  if(gl !== undefined){\r\n    gl.bindVertexArray(null);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n  }\r\n}\r\n\r\n// Returns computed normals for provided vertices.\r\n// Note: Indices have to be completely defined--NO TRIANGLE_STRIP only TRIANGLES.\r\nfunction calculateNormals(vs, ind) {\r\n  const\r\n    x = 0,\r\n    y = 1,\r\n    z = 2,\r\n    ns = [];\r\n\r\n  // For each vertex, initialize normal x, normal y, normal z\r\n  for (let i = 0; i < vs.length; i += 3) {\r\n    ns[i + x] = 0.0;\r\n    ns[i + y] = 0.0;\r\n    ns[i + z] = 0.0;\r\n  }\r\n\r\n  // We work on triads of vertices to calculate\r\n  for (let i = 0; i < ind.length; i += 3) {\r\n    // Normals so i = i+3 (i = indices index)\r\n    const v1 = [], v2 = [], normal = [];\r\n\r\n    // p2 - p1\r\n    v1[x] = vs[3 * ind[i + 2] + x] - vs[3 * ind[i + 1] + x];\r\n    v1[y] = vs[3 * ind[i + 2] + y] - vs[3 * ind[i + 1] + y];\r\n    v1[z] = vs[3 * ind[i + 2] + z] - vs[3 * ind[i + 1] + z];\r\n\r\n    // p0 - p1\r\n    v2[x] = vs[3 * ind[i] + x] - vs[3 * ind[i + 1] + x];\r\n    v2[y] = vs[3 * ind[i] + y] - vs[3 * ind[i + 1] + y];\r\n    v2[z] = vs[3 * ind[i] + z] - vs[3 * ind[i + 1] + z];\r\n\r\n    // Cross product by Sarrus Rule\r\n    normal[x] = v1[y] * v2[z] - v1[z] * v2[y];\r\n    normal[y] = v1[z] * v2[x] - v1[x] * v2[z];\r\n    normal[z] = v1[x] * v2[y] - v1[y] * v2[x];\r\n\r\n    // Update the normals of that triangle: sum of vectors\r\n    for (let j = 0; j < 3; j++) {\r\n      ns[3 * ind[i + j] + x] = ns[3 * ind[i + j] + x] + normal[x];\r\n      ns[3 * ind[i + j] + y] = ns[3 * ind[i + j] + y] + normal[y];\r\n      ns[3 * ind[i + j] + z] = ns[3 * ind[i + j] + z] + normal[z];\r\n    }\r\n  }\r\n\r\n  // Normalize the result.\r\n  // The increment here is because each vertex occurs.\r\n  for (let i = 0; i < vs.length; i += 3) {\r\n    // With an offset of 3 in the array (due to x, y, z contiguous values)\r\n    const nn = [];\r\n    nn[x] = ns[i + x];\r\n    nn[y] = ns[i + y];\r\n    nn[z] = ns[i + z];\r\n\r\n    let len = Math.sqrt((nn[x] * nn[x]) + (nn[y] * nn[y]) + (nn[z] * nn[z]));\r\n    if (len === 0) len = 1.0;\r\n\r\n    nn[x] = nn[x] / len;\r\n    nn[y] = nn[y] / len;\r\n    nn[z] = nn[z] / len;\r\n\r\n    ns[i + x] = nn[x];\r\n    ns[i + y] = nn[y];\r\n    ns[i + z] = nn[z];\r\n  }\r\n\r\n  return ns;\r\n}\r\n\r\n/**\r\n * Convert hex string color to rgb array\r\n *\r\n * @param hex_str A hex string in form '#_____'\r\n * @returns {number[]} An 3 element array of integers for RGB color\r\n */\r\nfunction hexToRGB(hex_str) {\r\n  const hex = parseInt(hex_str.replace(/^#/, ''), 16);\r\n  const red = (hex >> 16) & 0xFF;\r\n  const green = (hex >> 8) & 0xFF;\r\n  const blue = hex & 0xFF;\r\n  return [red, green, blue];\r\n}\r\n\r\n/**\r\n * Convert rgb array to hex string\r\n *\r\n * @param {number[]} rgb A integer array for RGB color\r\n * @returns {string} A hex string of the RGB color\r\n */\r\nfunction rgbToHex(rgb){\r\n  const red = rgb[0] << 16;\r\n  const green = rgb[1] << 8;\r\n  const blue = rgb[2];\r\n\r\n  return \"#\" + ((1 << 24) + red + green + blue).toString(16).slice(1,7);\r\n}\r\n\r\n/**\r\n * De-normalize colors from 0-1 to 0-255\r\n *\r\n * @param {number[]} color A normalized color array with values from 0-1\r\n * @returns {number[]} An integer color array with values from 0-255\r\n */\r\nfunction denormalizeColor(color) {\r\n  return color.map((c) => c * 255);\r\n}\r\n\r\n// Normalize colors from 0-255 to 0-1\r\n/**\r\n *\r\n * @param color An integer RGB color array with values from 0-255\r\n * @returns {number[]} A normalized RGB color array with values from 0-1\r\n */\r\nfunction normalizeColor(color) {\r\n  return color.map((c) => c / 255);\r\n}\r\n\r\nexport{\r\n  createGLcontext,\r\n  initializeContext,\r\n  resizeCanvasToDisplaySize,\r\n  autoResizeCanvas,\r\n  createProgram,\r\n  createShader,\r\n  cleanBuffers,\r\n  calculateNormals,\r\n  hexToRGB,\r\n  rgbToHex,\r\n  denormalizeColor,\r\n  normalizeColor\r\n}","/**\n * Created by Rick on 2021-12-11.\n */\n'use strict';\n\n/**\n * ArrayBufferClass provides functions for working with a vertex shader's attribute variables.\n *   The class establishes an array buffer for sending vertex attributes, such as vertex coordinates,\n *   texture coordinate data, or vertex color data through the graphics hardware pipeline.\n *   See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/WebGLBuffer) for a\n *     description of data buffers.\n *   See [WebGL Fundamentals](https://webgl2fundamentals.org/webgl/lessons/webgl-fundamentals.html) for\n *     an explanation on data buffers.\n *\n */\nexport default class ArrayBufferClass {\n  /**\n   * Create an AttributeClass instance\n   * @param {WebGLRenderingContext} gl The WebGL context\n   * @param {number} type  Specifying the [data type]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer}\n   *   of each element in the array.\n   * @param {WebGLProgram} program The WebGL program.\n   * @param {string} name The name of the attribute variable used in the vertex shader code.\n   */\n  constructor(gl,type, program, name) {\n    this.gl = gl;\n    this.buffer_type = 'ARRAY';\n    this.data_type = type;\n    // Look up where the attribute needs to go\n    this.attributeLocation = this.gl.getAttribLocation(program, name);\n    this.arrayBuffer = this.gl.createBuffer();\n  }\n\n  /**\n   * Describes how the attribute is read from the buffer pipeline.\n   * @param {number} size  The number of components per vertex attribute. Must be 1, 2, 3, or 4.\n   * @param {boolean} normalize Specifying whether integer data values should be normalized.\n   * @param {number} stride Specifying the offset in bytes between the beginning of consecutive vertex attributes.\n   * @param {number} offset Specifying an offset in bytes of the first component in the vertex attribute array.\n   */\n  bufferFormat(size, normalize, stride, offset) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.arrayBuffer);\n    // Tell the attribute how to get data out of the internal ARRAY_BUFFER\n    this.gl.vertexAttribPointer(\n      this.attributeLocation,\n      size,\n      this.data_type,\n      normalize,\n      stride,\n      offset\n    );\n    this.gl.enableVertexAttribArray(this.attributeLocation);\n  }\n\n  /**\n   * Initializes and creates the buffer object's data store.\n   * @param {Array} attributes Array containing\n   *   vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.\n   * @param {number} usage Specifies the intended [usage pattern]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData} of the data store for optimization purposes.\n   */\n  setData(attributes, usage){\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.arrayBuffer);\n    // Check if we need to flatten 'attributes'\n    let values;\n    values = attributes;\n    if(typeof(attributes[0]) == 'number'){\n      values = new Array(attributes.length);\n      for(let i = 0; i<attributes.length; i++)\n        values[i] = attributes[i];\n    }else if(Array.isArray(attributes)){\n      values = new Array(attributes.length * attributes[0].length);\n      for(let i = 0; i < attributes.length; i++) {\n        for(let j = 0; j < attributes[0].length; j++){\n          values[i * attributes[0].length + j] = attributes[i][j];\n        }\n      }\n    }\n\n    // Set geometry\n    switch(this.data_type){\n      case this.gl.FLOAT:\n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          new Float32Array(values),\n          usage\n        );\n      break;\n      case this.gl.UNSIGNED_BYTE:\n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          new Uint8Array(values),\n          usage\n        );\n        break;\n    }\n  }\n\n  /**\n   * Delete this classes array buffer instance\n   */\n  delete(){\n    this.gl.deleteBuffer(this.arrayBuffer);\n  }\n}","/**\r\n * Created by Rick on 2022-01-15.\r\n */\r\n'use strict';\r\n/**\r\n * ElementArrayBufferClass provides a way of defining vertex indices\r\n *   and using gl.drawElements for drawing the geometry.\r\n *   See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/WebGLBuffer) for a\r\n *     description of data buffers.\r\n *   See [WebGL2 Indexed Vertices]{@link https://webgl2fundamentals.org/webgl/lessons/webgl-indexed-vertices.html}\r\n *     for using indexed vertices.\r\n */\r\nexport default class ElementArrayBufferClass {\r\n  /**\r\n   * Create an instance of ElementArrayBufferClass\r\n   * @param gl {WebGLRenderingContext} gl The WebGL context\r\n   * @param type {string} The numeric type for the indices.\r\n   *   Acceptable values are \"Uint8Array\" or \"Uint16Array\".\r\n   */\r\n  constructor(gl, type) {\r\n    this.gl = gl;\r\n    this.buffer_type = 'ELEMENT';\r\n    this.data_type = type;\r\n    this.buffer_length = 0;\r\n    // Create a buffer to put the element index values\r\n    this.indexBuffer = gl.createBuffer();\r\n  }\r\n\r\n  /**\r\n   * Set the indices of the geometry's vertices\r\n   * @param {number[]} indices A numeric array of vertex indices.\r\n   * @param {number} usage Specifies the intended [usage pattern]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData} of the data store for optimization purposes.\r\n   */\r\n  setData(indices, usage) {\r\n    this.buffer_length = indices.length;\r\n    // Bind this.buffer to WebGL's internal ELEMENT_ARRAY_BUFFER\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    switch(this.data_type){\r\n      case \"Uint8Array\":\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,\r\n          new Uint8Array(indices), usage);\r\n        break;\r\n      case \"Uint16Array\":\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,\r\n          new Uint16Array(indices), usage);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rebind the index buffer\r\n   */\r\n  rebind(){\r\n    // Bind this.buffer to WebGL's internal ELEMENT_ARRAY_BUFFER\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n  }\r\n\r\n  /**\r\n   * Delete this classes index buffer instance\r\n   */\r\n  delete(){\r\n    this.gl.deleteBuffer(this.indexBuffer);\r\n  }\r\n}","/**\n * Created by Rick on 2021-12-09.\n */\n'use strict';\n\n/**\n * ReadShaderCodeClass handles reading the shader files from a local file\n *   or http server.\n *\n */\nexport default class ReadShaderCodeClass {\n  /**\n   * A static function that downloads shader code from a list of shader files.\n   * @param shader_files_list A string array of shader file/url paths\n   * @param debug A boolean which if true logs diagnostic messages to the console\n   * @returns {Promise<*[]>} Returns a Promise which when fulfilled returns a list of shader code\n   */\n  static async downloadShaders(shader_files_list, debug = false){\n    try {\n      const shaders_list = [];\n      for(let j = 0; j < shader_files_list.length; j += 1) {\n        let shader_url = shader_files_list[j];\n        let data = await ReadShaderCodeClass.#get_data(shader_url);\n        // Save the shaders in an array\n        shaders_list.push(data);\n        if(debug){\n          console.log(`Downloaded shader code ${shader_url}`);\n        }\n      }\n      return shaders_list;\n    }catch(e){\n      console.log(`downloadShaders Error: ${e}`);\n    }\n  }\n  /**\n   * A static function for the code/text of a single shader file.\n   * @param url The url to the shader file from the http server\n   * @returns {Promise<null>} Returns a Promise which if fulfilled returns\n   *   a file's text of shader code\n   */\n  static async #get_data(url) {\n    let data = null;\n    let resp = null;\n    try{\n      resp = await fetch(url);\n      if(resp.ok){\n        data = await resp.text();\n      }\n    }catch(e){\n      throw new Error(`downloadShaders fetch error: ${e.message}`);\n    }\n    if(!data){\n      throw new Error(`downloadShaders fetch status: ${resp.status}`)\n    }else {\n      return data;\n    }\n  }\n}","/**\n * Created by Rick on 2021-12-30.\n */\n'use strict';\n\n/**\n * Texture2DClass provides functions for setting and\n *   binding color or image\n *   [WebGLTexture object]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture}\n */\nexport default class Texture2DClass {\n  /**\n   * Create a Texture2DClass instance\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(gl) {\n    this.gl = gl;\n  }\n\n  /**\n   * Create a [WebGLTexture]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture} object\n   *   and define its color.\n   * @param {number[]} color_v4 A 4 element vector where the first three values are the RGB values for\n   *   the canvas background. The fourth is the alpha value.\n   */\n  setColor(color_v4){\n    // Bind to the TEXTURE_2D bind point of the unit\n    const texture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    // Fill the texture with a 1x1 colored pixel\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.gl.RGBA,\n      1,\n      1,\n      0,\n      this.gl.RGBA,\n      this.gl.UNSIGNED_BYTE,\n      new Uint8Array(color_v4)\n    )\n  }\n\n  /**\n   * Create a [WebGLTexture]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture} object.\n   *   Activate and bind the texture then set it initially to a\n   *   blue color while the image is loaded. The function is async\n   *   and returns a javascript Promise.\n   * @param {string} url The file path to the image to be used as a texture\n   */\n  async loadTexture(url) {\n    // Fill the texture with a 1x1 colored pixel\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D, //target\n      0,                  //level\n      this.gl.RGBA,       //internal format\n      1,                  //width\n      1,                  //height\n      0,                  //border\n      this.gl.RGBA,       //format\n      this.gl.UNSIGNED_BYTE,    //type\n      new Uint8Array([0, 0, 255, 255])  //pixel source\n    );\n\n    let response = await fetch(url);\n    let blob = await response.blob();\n    let image = await createImageBitmap(blob, {imageOrientation: 'flipY'});\n\n    const texture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.REPEAT);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.REPEAT);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, image);\n  }\n}","/**\n * Created by Rick on 2022-01-01.\n */\n'use strict';\n\nimport {toRadian as m4_toRadian} from \"gl-matrix/esm/common\";\nimport {\n  create as m4_create,\n  fromScaling as m4_fromScaling,\n  fromTranslation as m4_fromTranslation,\n  fromRotation as m4_fromRotation,\n  fromXRotation as m4_fromXRotation,\n  fromYRotation as m4_fromYRotation,\n  fromZRotation as m4_fromZRotation,\n  ortho as m4_ortho,\n  perspective as m4_perspective\n} from \"gl-matrix/esm/mat4\";\n\n/**\n * TransformsClass provides convenience functions for\n *   creating transform related matrices from the\n *   [gl-matrix library]{@link https://glmatrix.net/}\n */\nexport default class TransformsClass {\n  /**\n   * Creates a flattened 4x4 orthogonal projection matrix with the given bounds.\n   * @param {number} left\n   * @param {number} right\n   * @param {number} bottom\n   * @param {number} top\n   * @param {number} near\n   * @param {number} far\n   * @returns {Float32Array} A flattened 4x4 orthogonal projection matrix\n   */\n  static getOrthoMatrix(left, right, bottom, top, near, far){\n    const ortho_m4 = m4_create();\n    m4_ortho(ortho_m4, left, right, bottom, top, near, far);\n    return ortho_m4;\n  }\n\n  /**\n   * Creates a flattened 4x4 perspective matrix\n   * @param {number} fov Vertical field of view in degrees.\n   * @param {number} aspect Aspect ratio. typically viewport width/height.\n   * @param {number} zNear Near bound of the frustum.\n   * @param {number}zFar Far bound of the frustum, can be null or Infinity.\n   * @returns {Float32Array} A flattened 4x4 perspective matrix.\n   */\n  static getPerspectiveMatrix(fov, aspect, zNear, zFar){\n    const perspective_m4 = m4_create();\n    m4_perspective(perspective_m4, m4_toRadian(fov), aspect, zNear, zFar);\n    return perspective_m4;\n  }\n\n  /**\n   * Creates a 4x4 flattened translation matrix\n   * @param {Float32Array} translate_v A 3 element float array of x, y, z translation.\n   * @returns {Float32Array} A flattened 4x4 translation matrix.\n   */\n  static getTranslationMatrix(translate_v){\n    const translate_m4 = m4_create();\n    m4_fromTranslation(translate_m4, translate_v);\n    return translate_m4\n  }\n\n  /**\n   * Creates a flattened 4x4 matrix from a given angle around a given axis.\n   * @param {number} rotation_deg The angle to rotate the matrix by\n   * @param {number[]} axis_v The three element vector that defines\n   *   the line of rotation from [0,0,0] to axis[dx,dy,dz].\n   * @returns {Float32Array} A flattened 4x4 rotation matrix\n   */\n  static getRotationMatrix(rotation_deg, axis_v){\n    const rotate_m4 = m4_create();\n    m4_fromRotation(rotate_m4, m4_toRadian(rotation_deg), axis_v);\n    return rotate_m4;\n  }\n\n  /**\n   * Creates a flattened 4x4 rotation matrix for a specific axis.\n   * @param {string} axis Axis of rotation \"x\", \"Y\", or \"z\".\n   * @param {number} rotation_deg in degrees\n   * @returns {Float32Array} A flattened 4x4 rotation matrix\n   */\n  static getXYZRotationMatrix(axis, rotation_deg){\n    const rotate_m4 = m4_create();\n    if(axis === 'x'){\n      m4_fromXRotation(rotate_m4, m4_toRadian(rotation_deg));\n    }else if(axis === 'y'){\n      m4_fromYRotation(rotate_m4, m4_toRadian(rotation_deg));\n    }else if(axis === 'z'){\n      m4_fromZRotation(rotate_m4, m4_toRadian(rotation_deg));\n    }\n    return rotate_m4;\n  }\n\n  /**\n   * Creates a flattened 4x4 scaling matrix\n   * @param {Float32Array} scale_v A 3 element float array of x, y, z scaling.\n   * @returns {Float32Array} A flattened 4x4 scale matrix\n   */\n  static getScaleMatrix(scale_v){\n    const scale_m4 = m4_create();\n    m4_fromScaling(scale_m4, scale_v);\n    return scale_m4;\n  }\n}","/**\r\n * Created by Rick on 2021-12-11.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * UniformClass creates and sets various types\r\n *   of [uniform variables]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform}\r\n *   defined in shader code.\r\n */\r\nexport default class UniformClass {\r\n  /**\r\n   * Create a UninformClass instance\r\n   * @param {WebGLRenderingContext} gl The WebGL context.\r\n   * @param {WebGLProgram} program The WebGL program.\r\n   * @param {string} name The name of the uniform variable used in the shader code.\r\n   * @param {string} type The type of uniform variable.\r\n   */\r\n  constructor(gl, program, name, type) {\r\n    this.gl = gl;\r\n    this.data_type = type;\r\n    this.data = null;\r\n    // Look up where the uniform needs to go\r\n    this.uniformLocation = gl.getUniformLocation(program, name);\r\n  }\r\n\r\n  /**\r\n   * Set the value of the uniform variable.\r\n   * @param {number[]} args Array of values for the uniform variable.\r\n   *   The number of array elements submitted depends on the type of\r\n   *   variable being set.\r\n   */\r\n  setData(...args){\r\n    switch (this.data_type) {\r\n      case 'uniform1i':\r\n        this.gl.uniform1i(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform1f':\r\n        this.gl.uniform1f(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform2f':\r\n        this.gl.uniform2f(this.uniformLocation, args[0], args[1]);\r\n        this.data = [args[0], args[1]];\r\n        break;\r\n      case 'uniform4f':\r\n        this.gl.uniform4f(this.uniformLocation, args[0], args[1], args[2], args[3]);\r\n        this.data = [args[0], args[1], args[2], args[3]];\r\n        break;\r\n      case 'uniform2fv':\r\n        this.gl.uniform2fv(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform3fv':\r\n        this.gl.uniform3fv(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform4fv':\r\n        this.gl.uniform4fv(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniformMatrix3fv':\r\n        this.gl.uniformMatrix3fv(this.uniformLocation,false,args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniformMatrix4fv':\r\n        this.gl.uniformMatrix4fv(this.uniformLocation,false,args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      default:\r\n        throw new Error(`UniformClass: function ${this.type} has not been implemented.`);\r\n    }\r\n  }\r\n}","/**\r\n * Created by Rick on 2022-01-25.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * VertexArrayObjectClass provides a way of creating a Vertex Array Object.\r\n *   For a description see [MDN](https://developer.mozilla.org/en-US/docs/Web/API/WebGLVertexArrayObject)\r\n *\r\n */\r\nexport default class VertexArrayObjectClass {\r\n  /**\r\n   * Create an instance of VertexArrayObject\r\n   * @param {WebGLRenderingContext} gl The WebGL context\r\n   */\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.vao = gl.createVertexArray();\r\n    // Make vao the one we're currently working with\r\n    gl.bindVertexArray(this.vao);\r\n  }\r\n\r\n  /**\r\n   * Rebind the Vertex Array Object\r\n   */\r\n  rebind(){\r\n    this.gl.bindVertexArray(this.vao);\r\n  }\r\n  /**\r\n   * Clean the buffer reference from the graphics hardware\r\n   */\r\n  clean(){\r\n    this.gl.bindVertexArray(null);\r\n  }\r\n  /**\r\n   * Deletes this classes Vertex Array Object instance\r\n   */\r\n  delete(){\r\n    this.gl.deleteVertexArray(this.vao);\r\n  }\r\n}","/**\r\n * Created by Rick on 2022-02-05.\r\n */\r\n'use strict';\r\n\r\n// Visualize the axis on the screen\r\nexport default class Axis {\r\n\r\n  constructor(\r\n    dimension = 10,\r\n    diffuse = [1, 1, 1, 1],\r\n    wireframe = true,\r\n    visible = true\r\n    ) {\r\n    this.alias = 'axis';\r\n\r\n    this.wireframe = wireframe;\r\n    this.visible = visible;\r\n    this.diffuse = diffuse;\r\n    this.indices = [0, 1, 2, 3, 4, 5];\r\n    this.dimension = dimension;\r\n\r\n    this.build(this.dimension)\r\n  }\r\n  setDiffuse(diffuse){\r\n    this.diffuse = diffuse;\r\n  }\r\n  build(dimension) {\r\n    if (dimension) {\r\n      this.dimension = dimension;\r\n    }\r\n\r\n    this.vertices = [\r\n      -dimension, 0.0, 0.0,\r\n      dimension, 0.0, 0.0,\r\n      0.0, -dimension / 2, 0.0,\r\n      0.0, dimension / 2, 0.0,\r\n      0.0, 0.0, -dimension,\r\n      0.0, 0.0, dimension\r\n    ];\r\n  }\r\n}","/**\r\n * Created by Rick on 2022-02-26.\r\n */\r\n'use strict';\r\n\r\n// Visualize a cone on the screen\r\nexport default class Cone {\r\n  constructor(\r\n    diffuse = [1.0,0.664,0.0,1.0],\r\n    wireframe = true,\r\n    visible = true\r\n  ) {\r\n    this.alias = 'cone';\r\n\r\n    this.diffuse = diffuse;\r\n    this.wireframe = wireframe;\r\n    this.visible = visible;\r\n\r\n    this.vertices = [0.0,6.0,-2.59787e-16,3.0,8.88178e-16,5.19574e-16,2.79742,8.88178e-16,-1.08372,2.21703,8.88178e-16,-2.02109,1.33722,4.44089e-16,-2.68549,0.276805,4.44089e-16,-2.9872,-0.820989,4.44089e-16,-2.88548,-1.8079,8.88178e-16,-2.39405,-2.55065,8.88178e-16,-1.5793,-2.94892,8.88178e-16,-0.551249,-2.94892,8.88178e-16,0.551249,-2.55065,8.88178e-16,1.5793,-1.8079,8.88178e-16,2.39405,-0.820989,1.33227e-15,2.88548,0.276805,1.33227e-15,2.9872,1.33722,1.33227e-15,2.68549,2.21703,8.88178e-16,2.02109,2.79742,8.88178e-16,1.08372,3.0,8.88178e-16,-2.46124e-09];\r\n    this.indices = [0,1,2,0,2,3,0,3,4,0,4,5,0,5,6,0,6,7,0,7,8,0,8,9,0,9,10,0,10,11,0,11,12,0,12,13,0,13,14,0,14,15,0,15,16,0,16,17,0,17,18];\r\n  }\r\n}\r\n","/**\r\n * Created by Rick on 2022-02-05.\r\n */\r\n'use strict';\r\n\r\n// Visualize a floor on the screen\r\nexport default class Floor {\r\n\r\n  constructor(\r\n    dimension = 50,\r\n    lines = 5,\r\n    diffuse = [1, 1, 1, 1],\r\n    wireframe = true,\r\n    visible = true\r\n  ) {\r\n    this.alias = 'floor';\r\n\r\n    this.dimension = dimension;\r\n    this.lines = lines;\r\n    this.diffuse = diffuse;\r\n    this.vertices = [];\r\n    this.indices = [];\r\n\r\n    this.wireframe = wireframe;\r\n    this.visible = visible;\r\n\r\n    this.build(this.dimension, this.lines);\r\n  }\r\n  setDiffuse(diffuse){\r\n    this.diffuse = diffuse;\r\n  }\r\n  build(dimension, lines) {\r\n    if (dimension) {\r\n      this.dimension = dimension;\r\n    }\r\n\r\n    if (lines) {\r\n      this.lines = 2 * this.dimension / lines;\r\n    }\r\n\r\n    const inc = 2 * this.dimension / this.lines;\r\n    const v = [];\r\n    const i = [];\r\n\r\n    for (let l = 0; l <= this.lines; l++) {\r\n      v[6 * l] = -this.dimension;\r\n      v[6 * l + 1] = 0;\r\n      v[6 * l + 2] = -this.dimension + (l * inc);\r\n\r\n      v[6 * l + 3] = this.dimension;\r\n      v[6 * l + 4] = 0;\r\n      v[6 * l + 5] = -this.dimension + (l * inc);\r\n\r\n      v[6 * (this.lines + 1) + 6 * l] = -this.dimension + (l * inc);\r\n      v[6 * (this.lines + 1) + 6 * l + 1] = 0;\r\n      v[6 * (this.lines + 1) + 6 * l + 2] = -this.dimension;\r\n\r\n      v[6 * (this.lines + 1) + 6 * l + 3] = -this.dimension + (l * inc);\r\n      v[6 * (this.lines + 1) + 6 * l + 4] = 0;\r\n      v[6 * (this.lines + 1) + 6 * l + 5] = this.dimension;\r\n\r\n      i[2 * l] = 2 * l;\r\n      i[2 * l + 1] = 2 * l + 1;\r\n      i[2 * (this.lines + 1) + 2 * l] = 2 * (this.lines + 1) + 2 * l;\r\n      i[2 * (this.lines + 1) + 2 * l + 1] = 2 * (this.lines + 1) + 2 * l + 1;\r\n    }\r\n\r\n    this.vertices = v;\r\n    this.indices = i;\r\n  }\r\n}"],"names":[],"version":3,"file":"web-gl-helpers.js.map"}